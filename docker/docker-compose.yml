version: '3.8'

services:
  # 主应用服务
  app:
    build: .
    container_name: image-convert-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+pymysql://image_user:password123@mysql:3306/image_convert
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - image-convert-network

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: image-convert-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword123
      - MYSQL_DATABASE=image_convert
      - MYSQL_USER=image_user
      - MYSQL_PASSWORD=password123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - image-convert-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: image-convert-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - image-convert-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: image-convert-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./uploads:/var/www/uploads
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - image-convert-network

  # 定时任务服务
  scheduler:
    build: .
    container_name: image-convert-scheduler
    restart: unless-stopped
    command: ["python", "tools/scheduler.py"]
    environment:
      - DATABASE_URL=mysql+pymysql://image_user:password123@mysql:3306/image_convert
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - image-convert-network

volumes:
  mysql_data:
  redis_data:

networks:
  image-convert-network:
    driver: bridge
